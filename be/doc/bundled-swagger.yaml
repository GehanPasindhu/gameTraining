openapi: 3.0.0
info:
  title: Game Development Training Center API
  version: 1.0.0
servers:
  - url: 'http://localhost:5000/api'
paths:
  /admin/create:
    post:
      tags:
        - Admin
      summary: Create a new admin
      description: Creates a new admin user with a hashed password.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
              properties:
                username:
                  type: string
                  example: admin1
                password:
                  type: string
                  example: SuperSecure123!
      responses:
        '201':
          description: Admin created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  admin:
                    type: object
                    properties:
                      id:
                        type: integer
                      username:
                        type: string
        '400':
          description: Validation error
        '409':
          description: Username already exists
        '500':
          description: Internal server error
  /login:
    post:
      tags:
        - Admin
      summary: Admin login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: JWT token returned
        '401':
          description: Invalid credentials
  /courses:
    get:
      tags:
        - Courses
      summary: Get all courses
      responses:
        '200':
          description: List of courses
    post:
      tags:
        - Courses
      summary: Create a new course (admin only)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - title
                - description
                - duration
              properties:
                title:
                  type: string
                image_url:
                  type: string
                description:
                  type: string
                duration:
                  type: string
      responses:
        '200':
          description: Course created
  '/courses/{id}':
    get:
      tags:
        - Courses
      summary: Get a course by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Course details
        '404':
          description: Course not found
    delete:
      tags:
        - Courses
      summary: Delete a course (admin only)
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Course deleted
        '404':
          description: Course not found
    put:
      summary: Update course details
      tags:
        - Courses
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                duration:
                  type: string
                imageUrl:
                  type: string
      responses:
        '200':
          description: Course updated successfully
        '404':
          description: Course not found
  /registrations:
    post:
      tags:
        - Registrations
      summary: Register a student for a course
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - full_name
                - email
                - courseId
              properties:
                full_name:
                  type: string
                email:
                  type: string
                phone_number:
                  type: string
                message:
                  type: string
                courseId:
                  type: integer
      responses:
        '200':
          description: Registration created
    get:
      tags:
        - Registrations
      summary: Get all registrations (admin only)
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of registrations
  /contacts:
    post:
      tags:
        - Contacts
      summary: Submit a contact message
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - full_name
                - email
                - message
              properties:
                full_name:
                  type: string
                email:
                  type: string
                phone_number:
                  type: string
                message:
                  type: string
      responses:
        '200':
          description: Contact message submitted
    get:
      tags:
        - Contacts
      summary: Get all contact messages (admin only)
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of messages
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
